@model Demo.Entity.ViewModel.Product

@{
    ViewData["Title"] = "Edit";
}
<h1>@Model.OperationType</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ProductId" />
            <input type="hidden" asp-for="OperationType" />
            <div class="form-group">
                <label asp-for="ProductName" class="control-label">Product Name</label>
                <input asp-for="ProductName" oninput="this.value = this.value.trimStart();" class="form-control" />
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductPrice" class="control-label">Price</label>
                <input asp-for="ProductPrice" class="form-control" />
                <span asp-validation-for="ProductPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductQauntity" class="control-label">Quantity</label>
                <input asp-for="ProductQauntity" class="form-control" />
                <span asp-validation-for="ProductQauntity" class="text-danger"></span>
            </div>

            <label for="category">Category</label>
            <select id="category" class="form-control form-select" asp-for="CategoryId">
            </select>

            <label for="brand">Brand</label>
            <select id="brand" class="form-control form-select" asp-for=BrandId>

            </select>

            <div class="form-group">
                <label asp-for="ProductDescription" class="control-label">Description</label>
                <textarea asp-for="ProductDescription" oninput="this.value = this.value.trimStart();"
                    class="form-control"></textarea>
                <span asp-validation-for="ProductDescription" class="text-danger"></span>
            </div>


            <div class="form-group text-end mt-3">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script>
    $(document).ready(function () {
        $.ajax({
            url: '/Brand/GetAll',
            method: 'GET',
            success: function (data) {
                $('#brand').empty();
                $.each(data, function (index, brand) {
                    const option = $('<option></option>').val(brand.brandId).text(brand.brandName);
                    if (brand.brandId == @Model.BrandId  ) {
                        option.attr('selected', 'selected');
                    }
                    $('#brand').append(option);
                });
            },
            error: function () {
                console.log("Error fetching Categories.");
            }
        });
        $.ajax({
            url: '/Category/GetAll',
            method: 'GET',
            success: function (data) {
                $('#category').empty();
                $.each(data, function (index, category) {
                    const option = $('<option></option>').val(category.categoryId).text(category.categoryName);
                    if (category.categoryId == @Model.CategoryId) {
                        option.attr('selected', 'selected');
                    }
                    $('#category').append(option);
                });
            },
            error: function () {
                console.log("Error fetching Categories.");
            }
        });
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
