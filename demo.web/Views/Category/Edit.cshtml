@model Demo.Entity.ViewModel.Category

@{
    ViewData["Title"] = Model.OperationType;
}
<h1>@Model.OperationType</h1>

<h4>Category</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CategoryId" />
            <input type="hidden" asp-for="OperationType" />
            <div class="form-group">
                <label asp-for="CategoryName" class="control-label">Category Name</label>
                <input asp-for="CategoryName" oninput="this.value = this.value.trimStart();" class="form-control" />
                <span asp-validation-for="CategoryName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryDescription" class="control-label">Description</label>
                <textarea asp-for="CategoryDescription" class="form-control"></textarea>
                <span asp-validation-for="CategoryDescription" class="text-danger"></span>
            </div>


            <div class="form-group text-end mt-3">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
